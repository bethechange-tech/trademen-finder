/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: Users;
    applications: Application;
    categories: Category;
    jobs: Job;
    'user-profiles': UserProfile;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  locale: null;
  user: Users & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface Users {
  id: number;
  firstName: string;
  lastName: string;
  role: 'admin' | 'editor' | 'user';
  avatar?: string | null;
  bio?: string | null;
  applications?: (number | Application)[] | null;
  'user-profiles'?: (number | null) | UserProfile;
  shortList?: (number | Job)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "applications".
 */
export interface Application {
  id: number;
  job: number | Job;
  applicant: number | Users;
  status?: ('pending' | 'accepted' | 'rejected') | null;
  applicationDate: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobs".
 */
export interface Job {
  country: string;
  id: number;
  title: string;
  description: string;
  category: string;
  price: number;
  city: string;
  years: string;
  image: string;
  user: number | Users;
  applicants?: (number | Users)[] | null;
  shortList?: (number | Users)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-profiles".
 */
export interface UserProfile {
  id: number;
  firstName: string;
  lastName: string;
  fullName?: string | null;
  email: string;
  phone: string;
  state: string;
  postalCode: string;
  city: string;
  country: string;
  jobTitle: string;
  user: number | Users;
  experience: string;
  education: string;
  skills: string;
  bio: string;
  profilePicture: string;
  experienceDetails?:
  | {
    companyName: string;
    role: string;
    duration: string;
    location: string;
    initial: string;
    color: string;
    id?: string | null;
  }[]
  | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | Users;
  };
  key?: string | null;
  value?:
  | {
    [k: string]: unknown;
  }
  | unknown[]
  | string
  | number
  | boolean
  | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


